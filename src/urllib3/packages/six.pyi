import types
from typing import Any

class _LazyDescr(object):
    def __init__(self, name: str) -> None: ...
    def __get__(self, obj: str, tp: str) -> types.ModuleType: ...

class MovedModule(_LazyDescr):
    def __init__(self, name: str, old: str, new: str) -> None: ...
    def _resolve(self) -> types.ModuleType: ...
    def __getattr__(self, attr: str) -> types.ModuleType: ...

class MovedAttribute(_LazyDescr):
    def __init__(
        self, name: str, old_mod: str, new_mod: str, old_attr: str, new_attr: str
    ) -> None: ...
    def _resolve(self) -> types.ModuleType: ...
